#if defined(USE_CONSTITUTIVE_EXPRESSION)
	#define CTSW_CONSTITUTIVE_EXPRESSION CTSW_ON
#else
	#define CTSW_CONSTITUTIVE_EXPRESSION CTSW_OFF
#endif


#if !defined(NUM_REGULATORS)
	#error NUM_REGULATORS should have been defined
#endif


//We store the target as the last element of gene profiles
//The rest is only the regulators
#define REGULATOR_INDEX(regulatorId) (regulatorId)
#define REGULATOR_VALUE(regulatorId, time) (regulatorProfiles[(time) * (NUM_REGULATORS) + REGULATOR_INDEX(regulatorId)]) 

#define REGULARIZATION_MAX_EFFECT 10

#if defined(USE_ERROR_EULER)
    #define ERROR_FUNCTION ErrorEuler
#elif defined(USE_ERROR_DERIVATIVE_DIFF)
    #define ERROR_FUNCTION ErrorDerivativeDiff
#else
	#error No error function defined 
#endif

#define CTSW_MODEL_SPECIFIC_PARAMS CTSW_ON
#define CTSW_GLOBAL_MODEL_SPECIFIC_PARAMS CTSW_ON


#define GLOBAL_MODEL_SPECIFIC_PARAMS_DEF \
		global const uint *regulatorIndicesGlobal, global const int *weightConstraintsGlobal

#define GLOBAL_MODEL_SPECIFIC_PARAMS_PASS \
		regulatorIndicesGlobal, weightConstraintsGlobal


#define MODEL_SPECIFIC_PARAMS_DEF \
		local T_Value *regulatorProfiles, local T_Value *profileMaxima, float regularizationWeight, local int *weightConstraints

#define MODEL_SPECIFIC_PARAMS_PASS \
		regulatorProfiles, profileMaxima, regularizationWeight, weightConstraints


#if CTSW(CTSW_CONSTITUTIVE_EXPRESSION)
	#define CONSTITUTIVE_DERIVATIVE_TERM (CONSTITUTIVE_VALUE)
#else
	#define CONSTITUTIVE_DERIVATIVE_TERM 0
#endif



T_Value RegularizeUniformNormal(T_Value xPositive, T_Value maxNoPenalty);